#!/bin/sh

CUR_PATH=`pwd`

HOST_CPU_NUM=$((`grep '^processor' /proc/cpuinfo | wc -l` * 2))

ROOTFS=`grep CONFIG_INITRAMFS_SOURCE .config | awk 'BEGIN{FS="\""} {print $2}'`
if [ "$ROOTFS" = "" ]; then
	ROOTFS="../rootfs-2.6.35"
fi

make -j $HOST_CPU_NUM

if [ `grep -v "^#" .config | grep "CONFIG_USB_FILE_STORAGE=m"` ]; then
	echo "Configure with USBD mass storage"
	cp -a drivers/usb/gadget/g_file_storage.ko $ROOTFS/usr
else
	echo "Configure without USBD mass storage"
	if [ -f $ROOTFS/usr/g_file_storage.ko ]; then
		rm -f $ROOTFS/usr/g_file_storage.ko
	fi
fi

# Led driver
if [ -d "./kernel_modules/leds" ]; then
	cd kernel_modules/leds
	make
	cd $CUR_PATH
	# LED driver
	if [ -f "./kernel_modules/leds/board_leds.ko" ]; then 
		cp -af ./kernel_modules/leds/board_leds.ko $ROOTFS/usr/
	fi
fi

if [ `grep -v "^#" .config | grep "CONFIG_INITRAMFS_ROOT_UID"` ]; then
	echo "Configure with INITRAMFS"
	make -j $HOST_CPU_NUM

else
	echo "Configure with ROMFS"
	genromfs -f ../image/rootfs.bin -d $ROOTFS
	gzip -f -9 ../image/rootfs.bin
fi

# generate the conprog.gz
if [ "$1" = "spi" ]; then	# for SPI boot
	echo "Make zip image for SPI booting"
	if [ `grep -v "^#" .config | grep "CONFIG_LD_ADDR_0"` ]; then
		MKADDR=0x0
	elif [ `grep -v "^#" .config | grep "CONFIG_LD_ADDR_8000"` ]; then
		MKADDR=0x8000
	fi
	cp ../image/conprog.bin ../image/kernel.bin
	gzip -f -9 ../image/kernel.bin
	../image/mkimage -n 'Nuvoton-Linux' -A arm -O linux -T standalone -C gzip -a $MKADDR -e $MKADDR -d ../image/kernel.bin.gz ../image/conprog.gz
	rm -f ../image/kernel.bin.gz
fi

cd $CUR_PATH
# Wi-Fi RTL8189FS driver
if [ -d "./kernel_modules/rtl8189FS_linux_v4.3.24" ]; then
        cd kernel_modules/rtl8189FS_linux_v4.3.24
        ./build.sh
        cd $CUR_PATH
fi
